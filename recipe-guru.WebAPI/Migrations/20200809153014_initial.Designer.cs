// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recipe_guru.WebAPI.Database;

namespace recipeguru.WebAPI.Migrations
{
    [DbContext(typeof(recipeGuruContext))]
    [Migration("20200809153014_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("recipe_guru.WebAPI.Database.ImageResources", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ImageByteValue")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("ImageResources");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Kategorije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReceptiId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReceptiId");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.KnjigeRecepata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("KorisnikId")
                        .HasColumnType("bigint");

                    b.Property<int?>("KorisnikId1")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId1");

                    b.ToTable("KnjigeRecepata");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("CS_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("CS_KorisnickoIme");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Ratings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("bigint");

                    b.Property<int?>("KorisnikId1")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<long>("ReceptId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId1");

                    b.HasIndex("ReceptId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.ReceptKoraci", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Deskripcija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ReceptId")
                        .HasColumnType("bigint");

                    b.Property<int>("RedniBrojKoraka")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceptId");

                    b.ToTable("ReceptKoraci");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.ReceptSastojci", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kolicina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ReceptId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReceptId");

                    b.ToTable("ReceptSastojci");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Recepti", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrojPregleda")
                        .HasColumnType("bigint");

                    b.Property<string>("DuzinaPripreme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GlavnaSlikaId")
                        .HasColumnType("bigint");

                    b.Property<long>("KnjigaRecepataId")
                        .HasColumnType("bigint");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GlavnaSlikaId");

                    b.HasIndex("KnjigaRecepataId");

                    b.ToTable("Recepti");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Kategorije", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.Recepti", null)
                        .WithMany("Kategorije")
                        .HasForeignKey("ReceptiId");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.KnjigeRecepata", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId1");
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici")
                        .IsRequired();

                    b.HasOne("recipe_guru.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge")
                        .IsRequired();
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Ratings", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId1");

                    b.HasOne("recipe_guru.WebAPI.Database.Recepti", "Recept")
                        .WithMany("Ratings")
                        .HasForeignKey("ReceptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.ReceptKoraci", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.Recepti", "Recept")
                        .WithMany("ReceptKoraci")
                        .HasForeignKey("ReceptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.ReceptSastojci", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.Recepti", "Recept")
                        .WithMany("ReceptSastojci")
                        .HasForeignKey("ReceptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("recipe_guru.WebAPI.Database.Recepti", b =>
                {
                    b.HasOne("recipe_guru.WebAPI.Database.ImageResources", "GlavnaSlika")
                        .WithMany()
                        .HasForeignKey("GlavnaSlikaId");

                    b.HasOne("recipe_guru.WebAPI.Database.KnjigeRecepata", "KnjigaRecepata")
                        .WithMany("Recepti")
                        .HasForeignKey("KnjigaRecepataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
